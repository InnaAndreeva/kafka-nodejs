version: "3"
services:
  zookeeper:
    image: wurstmeister/zookeeper:3.4.6
    container_name: kafka-nodejs-example-zookeeper
    ports:
      - 2181:2181
  kafka:
    image: wurstmeister/kafka:2.11-1.1.0
    container_name: kafka-nodejs-example-kafka
    depends_on:
      - zookeeper
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_CREATE_TOPICS: "card-topic:1:1,card-topic-with-img:1:1,card-topic-success:1:1"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    ports:
      - 9092:9092
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  database:
    image: postgres:10.4-alpine
    container_name: kafka-nodejs-example-database
    depends_on:
      - kafka
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_HOST_AUTH_METHOD: "trust"
    ports:
      - 8000:5432
    volumes:
      - ./services/database/schema.sql:/docker-entrypoint-initdb.d/1-schema.sql
      - ./services/database/seed.sql:/docker-entrypoint-initdb.d/2-seed.sql
  service2:
    build: ./services/service2
    container_name: service2
    command: sh -c "dockerize -wait tcp://zookeeper:2181 -wait tcp://kafka:9092 -wait tcp://database:5432 npm start"
    depends_on:
      - zookeeper
      - kafka
      - database
    environment:
      PGHOST: database
      PGPORT: 5432
      PGUSER: ${POSTGRES_USER}
      PGDATABASE: ${POSTGRES_USER}
      PGPASSWORD: ${POSTGRES_PASSWORD}
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
  service3:
    build: ./services/service3
    container_name: service3
    command: sh -c "dockerize -wait tcp://zookeeper:2181 -wait tcp://kafka:9092 -wait tcp://database:5432 npm start"
    depends_on:
      - zookeeper
      - kafka
      - database
    environment:
      PGHOST: database
      PGPORT: 5432
      PGUSER: ${POSTGRES_USER}
      PGDATABASE: ${POSTGRES_USER}
      PGPASSWORD: ${POSTGRES_PASSWORD}
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
  service1:
    build: ./services/service1
    container_name: service1
    command: sh -c "dockerize -wait tcp://zookeeper:2181 -wait tcp://kafka:9092 -wait tcp://database:5432 npm start"
    depends_on:
      - zookeeper
      - kafka
      - database
      - service3
    environment:
      PGHOST: database
      PGPORT: 5432
      PGUSER: ${POSTGRES_USER}
      PGDATABASE: ${POSTGRES_USER}
      PGPASSWORD: ${POSTGRES_PASSWORD}
      PRODUCER_PORT: ${PRODUCER_PORT}
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    ports:
      - ${PRODUCER_PORT}:${PRODUCER_PORT}
